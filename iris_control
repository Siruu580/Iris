#!/bin/bash

IRIS_PROCESS_NAME="Iris"
IRIS_PROCESS_KEYWORD="app_process"
IRIS_START_COMMAND="adb shell 'su root sh -c \"CLASSPATH=/data/local/tmp/Iris.dex app_process / Iris > /dev/null 2>&1\"' &"

get_iris_pid() {
  pid=$(ps aux | grep "Iris" | grep "app_process" | grep -v "sh -c" | awk '{print $2}')
  echo "$pid"
}

iris_status() {
  pid=$(get_iris_pid)
  if [ -n "$pid" ]; then
    echo "Iris is working. PID: $pid"
  else
    echo "Iris is not running."
  fi
}

iris_start() {
  pid=$(get_iris_pid)
  if [ -n "$pid" ]; then
    echo "Iris is already running."
  else
    echo "Starting Iris service..."
    eval "$IRIS_START_COMMAND" # Use eval to execute the command string
    sleep 2 # Give it some time to start up. Adjust if needed.
    new_pid=$(get_iris_pid)
    if [ -n "$new_pid" ]; then
      echo "Iris service started. PID: $new_pid"
    else
      echo "Failed to start Iris service."
    fi
  fi
}

iris_stop() {
  pid=$(get_iris_pid)
  if [ -n "$pid" ]; then
    echo "Stopping Iris service..."
    sudo kill -9 "$pid"
    sleep 1 # Give it some time to stop. Adjust if needed.
    stopped_pid=$(get_iris_pid)
    if [ -z "$stopped_pid" ]; then
      echo "Iris service stopped."
    else
      echo "Failed to stop Iris service (PID: $pid) may still be running."
    fi
  else
    echo "Iris is not running."
  fi
}

case "$1" in
  status)
    iris_status
    ;;
  start)
    iris_start
    ;;
  stop)
    iris_stop
    ;;
  *)
    echo "Usage: $0 {status|start|stop}"
    exit 1
    ;;
esac

exit 0